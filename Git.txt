1.版本管理工具svn,Git
	SVN必须需要服务器
	Git每个人自己有服务器，可以将不同人的服务器内容进行交流
2.选择路径创建空目录，在空目录内创建版本库
	要进行版本库提交或者修改，需要先表明提交者的身份
	添加账户名
	git config --global user.name "Your Name"	
	添加账户邮箱
	git config --global user.email "email@example.com"
	添加成功后可以在c:\用户\用户名\.gitconfig下查看到你添加的账号和email地址
	
	git init 	在空目录内创建版本库，系统自动创建一个master分支
	
	git status	查看当前分支版本库状态
	
	git add  文件或目录（空目录无法添加到版本库） 将文件或目录添加到暂存区
	
	git commit 	提交暂存区的文件或目录到分支版本库
	git commit	-m '备注信息'	每次提交必须添加备注信息
	
	rm 删除文件
	
	直接从版本库删除文件信号添加到暂存区，再通过git commit 提交删除文件的信息
	git rm 文件名
	
	当我们在工作区进行修改和删除文件时，发现文件的删除和修改有错误
	在未提交到暂存区时，可以通过 git checkout 文件名还原上一个版本的文件
	查看文件修改的内容
	git diff 文件名		查看文件与上一个版本修改的内容
	git diff HEAD~num   插件版本库与上num个版本修改的内容
	
	
	10.查看版本库日志
		详细日志：git log 
		简化日志：git log --pretty=oneline
		为了防止版本号冲突，commit id 为经过SHA1计算后的16进制的id值
	11.回退版本
		回退到上一个版本：git reset --hard HEAD^
		回退到上两个版本：git reset --hard HEAD^^	
		回退到上num版本：git reset --hard HEAD~num
		回退到目标版本：git reset --hard '唯一HEAD版本id值'  
	12.查看版本历史切换日志
		git reflog
	
	远程库
	Github
	创建了账号和密码
	新建一个版本库（没有任何分支）
	本体库往远程库推送本地文件需要先建立连接
	1.在本地生成秘钥和公钥 路径C:\Users\Administrator\.ssh
	2.将公钥id_rsa.pub内容在GitHub内创建ssh key
	3.开始建立连接
		git remote add origin(连接名) git@github.com:github账户名/远程仓库名(连接路径)
	4.将本地版本库推送到远程仓库（将本地的库推送到远程库）
		git push -u origin master
		origin(连接名) master(远程分支)
	5.远程拉取
		git pull origin master
	6.克隆远程仓库（将远程仓库的所有内容克隆到本地）
		git clone git@github.com:github账户名/远程仓库名
	
	分支：为了数据的安全，创建一个分支，相当于平行宇宙
	
	1.创建分支
		git branch 分支名
	2.查看本地分支
		git branch
			-al :查看本地与远程的分支
	3.切换分支
		git checkout 分支名
	4.创建并同时切换分支
		git checkout -b 分支名
	5.合并分支：将其他分支与当前分支进行合并
		git merge 分支名
	6.删除分支
		git branch -d 分支名